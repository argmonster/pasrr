start PASRRWrap(parmfile, option, client, retcode)

parmfile    is x
option      is x
client      is x
retcode     is b
string 			is x

'option vars
stafftotrace[] is x
tracepath      is x
useGlobalId       is x
useIdPicker       is x
IdPickerLib       is x
callNoteScript    is x
callReviewScript  is x
staffNeedAuth     is x
staffwithAuth[]   is x

usc_note    is x
usc_pasrr_review  is x


'usc_note = "eBASE_notes"
usc_pasrr_review = "PASRREvent"
usc_pasrr_review = "PASRRFINEV"

'default the trace staff
stafftotrace[1] = "3737"
stafftotrace[2] = "3242"

tracepath = "/c4/EXPORT2/trace/trace3242"

callNoteScript = "N"

callReviewScript = "Y"
staffNeedAuth = "Y"

staffwithAuth[1] = "3242"
staffwithAuth[2] = "3737"
staffwithAuth[3] = "3688"
staffwithAuth[4] = "4393"
staffwithAuth[5] = "2221"
staffwithAuth[6] = "2212"
staffwithAuth[7] = "2225"
staffwithAuth[8] = "4149"
staffwithAuth[9] = "4504"

getParm(parmfile)
getOption(option)

if $find($operstaffid, stafftotrace[], 1, "F") > 0 then
	$trace("path.on",tracepath)
endif

'if usc_note !dp then return endif   'error msg?
if usc_pasrr_review !dp then return endif   'error msg?
   
'use the options to decide how to get the client id
if useGlobalId = "Y" and useIdPicker != "Y" then 
   client = $regid
endif

if useIdPicker = "Y" and IdPickerLib dp and client !dp then
   IdPickerLib:pickClient(client)
endif

'panic if we still don't have a client
if client !dp then
   string = "The System Cannot Tell What Client to Use"
   $brmsg(string, 1, "WC")
   return
endif

retcode = 0
if callNoteScript = "Y" then
   call usc_note(parmfile, option, client, retcode)
endif

'if the notes where called and aborted by the user, or 
' exited in error then we don't want to call the review script
if retcode != 0 then
   return
endif

'review pasrr notes
if callReviewScript = "Y" then 
   'let configuration determine access to review script
   if staffNeedAuth = "Y" then
      if $find($operstaffid, staffwithAuth[], 1, "F") > 0 then
         call usc_pasrr_review(parmfile, option, client, retcode)
      else
         string = "You are not Authorized for this Function"
         $brmsg(string, 1, "WC")
      endif
   else
      call usc_pasrr_review(parmfile, option, client, retcode)
   endif
endif

end PASRRWrap

%include inc_GetParm
%include inc_GetOption 


'HF11121934
